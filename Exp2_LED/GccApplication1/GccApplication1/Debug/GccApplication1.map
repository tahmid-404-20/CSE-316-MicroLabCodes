Archive member included to satisfy reference by file (symbol)

h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                              H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o (exit)
h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
                              main.o (__tablejump2__)
h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
                              main.o (malloc)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
__flp               0x2               h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)

Discarded input sections

 .data          0x00000000        0x0 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .bss           0x00000000        0x0 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .data          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .bss           0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.prologue
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
 .text          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
 .bss           0x00000000        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00008000         xr
data             0x00800060         0x00000800         rw !x
eeprom           0x00810000         0x00000400         rw !x
fuse             0x00820000         0x00000002         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
LOAD main.o
START GROUP
LOAD h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a
LOAD h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
LOAD h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a
LOAD H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5\libatmega32.a
END GROUP
                0x00000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x00800060]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x00008000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x00000800]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x00000400]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x74a
 *(.vectors)
 .vectors       0x00000000       0x54 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.loadArr
                0x00000054       0xa8 main.o
                0x000000fc                . = ALIGN (0x2)
                0x000000fc                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000fc        0x0 linker stubs
 *(.trampolines*)
                0x000000fc                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000fc                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000fc                __ctors_start = .
 *(.ctors)
                0x000000fc                __ctors_end = .
                0x000000fc                __dtors_start = .
 *(.dtors)
                0x000000fc                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000fc        0x0 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
                0x000000fc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000fc        0xc H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000108       0x16 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_copy_data.o)
                0x00000108                __do_copy_data
 .init4         0x0000011e       0x10 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                0x0000011e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000012e        0x8 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x00000136        0x4 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
                0x00000136                __vector_1
                0x00000136                __vector_12
                0x00000136                __bad_interrupt
                0x00000136                __vector_6
                0x00000136                __vector_3
                0x00000136                __vector_11
                0x00000136                __vector_13
                0x00000136                __vector_17
                0x00000136                __vector_19
                0x00000136                __vector_7
                0x00000136                __vector_5
                0x00000136                __vector_4
                0x00000136                __vector_9
                0x00000136                __vector_2
                0x00000136                __vector_15
                0x00000136                __vector_8
                0x00000136                __vector_14
                0x00000136                __vector_10
                0x00000136                __vector_16
                0x00000136                __vector_18
                0x00000136                __vector_20
                0x0000013a                . = ALIGN (0x2)
 *(.text.*)
 .text.load     0x0000013a       0xec main.o
                0x0000013a                load
 .text.loadArr  0x00000226      0x1e8 main.o
                0x00000226                loadArr
 .text.getLength
                0x0000040e        0xa main.o
                0x0000040e                getLength
 .text.drift    0x00000418       0x2e main.o
                0x00000418                drift
 .text.main     0x00000446       0xb2 main.o
                0x00000446                main
 .text.libgcc   0x000004f8        0xc h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_tablejump2.o)
                0x000004f8                __tablejump2__
 .text.avr-libc
                0x00000504      0x242 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00000504                malloc
                0x00000634                free
                0x00000746                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000746        0x0 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                0x00000746                _exit
                0x00000746                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000746        0x4 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000074a                _etext = .

.data           0x00800060      0x10c load address 0x0000074a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x6 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00800060                __malloc_heap_end
                0x00800062                __malloc_heap_start
                0x00800064                __malloc_margin
 *(.data*)
 .data.THREE    0x00800066        0x8 main.o
                0x00800066                THREE
 .data.QUESTION
                0x0080006e        0x8 main.o
                0x0080006e                QUESTION
 .data.SMILEY   0x00800076        0x8 main.o
                0x00800076                SMILEY
 .data.EXCLAMATION
                0x0080007e        0x8 main.o
                0x0080007e                EXCLAMATION
 .data.SPACE    0x00800086        0x8 main.o
                0x00800086                SPACE
 .data.Z        0x0080008e        0x8 main.o
                0x0080008e                Z
 .data.Y        0x00800096        0x8 main.o
                0x00800096                Y
 .data.X        0x0080009e        0x8 main.o
                0x0080009e                X
 .data.W        0x008000a6        0x8 main.o
                0x008000a6                W
 .data.V        0x008000ae        0x8 main.o
                0x008000ae                V
 .data.U        0x008000b6        0x8 main.o
                0x008000b6                U
 .data.T        0x008000be        0x8 main.o
                0x008000be                T
 .data.S        0x008000c6        0x8 main.o
                0x008000c6                S
 .data.R        0x008000ce        0x8 main.o
                0x008000ce                R
 .data.Q        0x008000d6        0x8 main.o
                0x008000d6                Q
 .data.P        0x008000de        0x8 main.o
                0x008000de                P
 .data.O        0x008000e6        0x8 main.o
                0x008000e6                O
 .data.N        0x008000ee        0x8 main.o
                0x008000ee                N
 .data.M        0x008000f6        0x8 main.o
                0x008000f6                M
 .data.L        0x008000fe        0x8 main.o
                0x008000fe                L
 .data.K        0x00800106        0x8 main.o
                0x00800106                K
 .data.J        0x0080010e        0x8 main.o
                0x0080010e                J
 .data.I        0x00800116        0x8 main.o
                0x00800116                I
 .data.H        0x0080011e        0x8 main.o
                0x0080011e                H
 .data.G        0x00800126        0x8 main.o
                0x00800126                G
 .data.F        0x0080012e        0x8 main.o
                0x0080012e                F
 .data.E        0x00800136        0x8 main.o
                0x00800136                E
 .data.D        0x0080013e        0x8 main.o
                0x0080013e                D
 .data.C        0x00800146        0x8 main.o
                0x00800146                C
 .data.B        0x0080014e        0x8 main.o
                0x0080014e                B
 .data.A        0x00800156        0x8 main.o
                0x00800156                A
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0080015e        0x8 main.o
 *(.rodata*)
 .rodata.str1.1
                0x00800166        0x5 main.o
 *(.gnu.linkonce.r*)
                0x0080016c                . = ALIGN (0x2)
 *fill*         0x0080016b        0x1 
                0x0080016c                _edata = .
                0x0080016c                PROVIDE (__data_end, .)

.bss            0x0080016c        0xa
                0x0080016c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.start     0x0080016c        0x2 main.o
                0x0080016c                start
 .bss.length    0x0080016e        0x2 main.o
                0x0080016e                length
 .bss.invert    0x00800170        0x2 main.o
                0x00800170                invert
 *(COMMON)
 COMMON         0x00800172        0x4 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00800172                __brkval
                0x00800174                __flp
                0x00800176                PROVIDE (__bss_end, .)
                0x0000074a                __data_load_start = LOADADDR (.data)
                0x00000856                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800176        0x0
                [!provide]                PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                PROVIDE (__noinit_end, .)
                0x00800176                _end = .
                0x00800176                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 main.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 h:/softwares/microchipsimulator/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a(malloc.o)

.note.gnu.avr.deviceinfo
                0x00000000       0x3c
 .note.gnu.avr.deviceinfo
                0x00000000       0x3c H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x40 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0xeda
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x4e6 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .debug_info    0x000004e6      0x9f4 main.o

.debug_abbrev   0x00000000      0x6c2
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x4a3 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .debug_abbrev  0x000004a3      0x21f main.o

.debug_line     0x00000000      0x4fe
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x116 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .debug_line    0x00000116      0x3e8 main.o

.debug_frame    0x00000000       0x94
 *(.debug_frame)
 .debug_frame   0x00000000       0x94 main.o

.debug_str      0x00000000      0x3a3
 *(.debug_str)
 .debug_str     0x00000000      0x196 H:/Softwares/MicroChipSimulator/7.0/Packs/atmel/ATmega_DFP/1.7.374/gcc/dev/atmega32/avr5/crtatmega32.o
 .debug_str     0x00000196      0x20d main.o
                                0x241 (size before relaxing)

.debug_loc      0x00000000      0x23d
 *(.debug_loc)
 .debug_loc     0x00000000      0x23d main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x30
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x30 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(GccApplication1.elf elf32-avr)
LOAD linker stubs
